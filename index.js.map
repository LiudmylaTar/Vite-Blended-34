{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/storage.js","../src/main.js"],"sourcesContent":["export const refferData = {\n  loginForm: document.querySelector('.login-form'),\n  emailInput: document.querySelector('[name=\"email\"]'),\n  passwordInput: document.querySelector('[name=\"password\"]'),\n  btnSubmit: document.querySelector('[name=\"button\"]'),\n};\n","export function saveUserData(data, key) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n\nexport function getUserData(key) {\n  const data = localStorage.getItem(key);\n  if (data) {\n    return JSON.parse(data);\n  }\n  return null;\n}\n","// Перед вами форма для авторизації на сайті\n// (правильні дані для входу збережені в обʼєкті USER_DATA)\n\n// Розбийте код на кілька файлів:\n// storage.js - функції для роботи зі сховищем;\n// refs.js - посилання на всі потрібні елементи в html;\n// main.js - головний файл, де вся основна логіка додатка.\n// Ви маєте додати перевірку введених даних при сабміті:\n// Якщо введені дані не збігаються зі збереженими, викликайте аlert і\n// повідомляйте про помилку.\n// Якщо імейл і пароль користувача збігаються, зберігайте дані з форми\n// у локальне сховище і змінюйте кнопку Login на Logout, також робіть поля введення\n// недоступними для змін.\n\n// При перезавантаженні сторінки, якщо користувач авторизован, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// з локального сховища.\nimport { refferData } from './js/refs';\nimport { saveUserData, getUserData } from './js/storage';\n\nconst USER_DATA = {\n  email: 'user@mail.com',\n  password: 'secret',\n};\n\nconst LS_KEY = 'user-data';\n\nrefferData.loginForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const emailData = refferData.emailInput.value.trim();\n  const passwordData = refferData.passwordInput.value.trim();\n\n  if (emailData === '' || passwordData === '') {\n    alert('Plaese fill all fields');\n    return;\n  }\n  if (emailData !== USER_DATA.email || passwordData !== USER_DATA.password) {\n    alert('Incorrect data, plaese check password or mail');\n    return;\n  }\n  saveUserData({ email: emailData, password: passwordData }, LS_KEY);\n  refferData.btnSubmit.textContent = 'Logout';\n  refferData.emailInput.setAttribute('readonly', true);\n  refferData.passwordInput.setAttribute('readonly', true);\n});\n\nconst storageData = getUserData(LS_KEY);\nif (storageData) {\n  refferData.emailInput.value = storageData.email || '';\n  refferData.passwordInput.value = storageData.password || '';\n\n  refferData.btnSubmit.textContent = 'Logout';\n  refferData.emailInput.setAttribute('readonly', true);\n  refferData.passwordInput.setAttribute('readonly', true);\n}\n"],"names":["refferData","saveUserData","data","key","getUserData","USER_DATA","LS_KEY","event","emailData","passwordData","storageData"],"mappings":"ssBAAO,MAAMA,EAAa,CACxB,UAAW,SAAS,cAAc,aAAa,EAC/C,WAAY,SAAS,cAAc,gBAAgB,EACnD,cAAe,SAAS,cAAc,mBAAmB,EACzD,UAAW,SAAS,cAAc,iBAAiB,CACrD,ECLO,SAASC,EAAaC,EAAMC,EAAK,CACtC,aAAa,QAAQA,EAAK,KAAK,UAAUD,CAAI,CAAC,CAChD,CAEO,SAASE,EAAYD,EAAK,CAC/B,MAAMD,EAAO,aAAa,QAAQC,CAAG,EACrC,OAAID,EACK,KAAK,MAAMA,CAAI,EAEjB,IACT,CCWA,MAAMG,EAAY,CAChB,MAAO,gBACP,SAAU,QACZ,EAEMC,EAAS,YAEfN,EAAW,UAAU,iBAAiB,SAAUO,GAAS,CACvDA,EAAM,eAAc,EACpB,MAAMC,EAAYR,EAAW,WAAW,MAAM,KAAI,EAC5CS,EAAeT,EAAW,cAAc,MAAM,KAAI,EAExD,GAAIQ,IAAc,IAAMC,IAAiB,GAAI,CAC3C,MAAM,wBAAwB,EAC9B,MACD,CACD,GAAID,IAAcH,EAAU,OAASI,IAAiBJ,EAAU,SAAU,CACxE,MAAM,+CAA+C,EACrD,MACD,CACDJ,EAAa,CAAE,MAAOO,EAAW,SAAUC,CAAY,EAAIH,CAAM,EACjEN,EAAW,UAAU,YAAc,SACnCA,EAAW,WAAW,aAAa,WAAY,EAAI,EACnDA,EAAW,cAAc,aAAa,WAAY,EAAI,CACxD,CAAC,EAED,MAAMU,EAAcN,EAAYE,CAAM,EAClCI,IACFV,EAAW,WAAW,MAAQU,EAAY,OAAS,GACnDV,EAAW,cAAc,MAAQU,EAAY,UAAY,GAEzDV,EAAW,UAAU,YAAc,SACnCA,EAAW,WAAW,aAAa,WAAY,EAAI,EACnDA,EAAW,cAAc,aAAa,WAAY,EAAI"}